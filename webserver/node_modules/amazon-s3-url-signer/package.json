{
  "_args": [
    [
      "amazon-s3-url-signer",
      "/Users/drtyhbo/Development/erlang/webserver"
    ]
  ],
  "_from": "amazon-s3-url-signer@*",
  "_id": "amazon-s3-url-signer@0.0.7",
  "_inCache": true,
  "_installable": true,
  "_location": "/amazon-s3-url-signer",
  "_npmUser": {
    "email": "dima.yashkir@gmail.com",
    "name": "dyashkir"
  },
  "_npmVersion": "1.2.30",
  "_phantomChildren": {},
  "_requested": {
    "name": "amazon-s3-url-signer",
    "raw": "amazon-s3-url-signer",
    "rawSpec": "",
    "scope": null,
    "spec": "*",
    "type": "range"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/amazon-s3-url-signer/-/amazon-s3-url-signer-0.0.7.tgz",
  "_shasum": "bde7053d30ffd08ba801a9ada4d3931a05254048",
  "_shrinkwrap": null,
  "_spec": "amazon-s3-url-signer",
  "_where": "/Users/drtyhbo/Development/erlang/webserver",
  "author": {
    "name": "Dmytro Yashkir"
  },
  "bugs": {
    "url": "https://github.com/dyashkir/amazon-s3-url-signer/issues"
  },
  "dependencies": {},
  "description": "Module to sign urls to allow access to resources in the S3",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "bde7053d30ffd08ba801a9ada4d3931a05254048",
    "tarball": "http://registry.npmjs.org/amazon-s3-url-signer/-/amazon-s3-url-signer-0.0.7.tgz"
  },
  "homepage": "https://github.com/dyashkir/amazon-s3-url-signer#readme",
  "keywords": [
    "S3",
    "amazon",
    "signing",
    "url"
  ],
  "license": "BSD",
  "main": "index.js",
  "maintainers": [
    {
      "name": "dyashkir",
      "email": "dima.yashkir@gmail.com"
    }
  ],
  "name": "amazon-s3-url-signer",
  "optionalDependencies": {},
  "readme": "##Amazon S3 url signer\n\nModule to sign urls to allow access to the private resources in the S3\n\n###To install\n\n    npm install amazon-s3-url-signer\n\n###Use example\n\n    var sig= require('amazon-s3-url-signer');\n\n    var bucket1 = sig.urlSigner('my key', 'my secret');\n    var bucket1 = sig.urlSigner('my key2', 'my secret2');\n    \n    var url1 = bucket1.getUrl('GET', 'somefile.png', 'mybucket', 10); //url expires in 10 minutes\n    var url2 = bucket2.getUrl('PUT', '/somedir/somefile.png', 'mybucketonotheraccount', 10); //url expires in 100 minutes\n\n###Local test\n\nIf you want to test without an s3 acount you can use <https://github.com/jubos/fake-s3>.\n\n    sudo apt-get install rubygems\n    sudo gem install fakes3  --no-rdoc --no-ri\n    mkdir s3_files\n    fakes3 -r s3_files -p 1234\n\nNow a fakes3 server is started.\nNow we will generate an S3 URL, and push a file to it.\n\n    var s3 = require('./index');\n\n    var putUrl = s3.urlSigner(123, 'abc', {\n      host: 'mymachine.me',\n      port: 1234\n    }).getUrl('PUT', 'toto.json', 'my_bucket', 600);\n    console.log(putUrl);\n\nThe generated S3 url is:\n\n    http://mymachine.me:1234/my_bucket/toto.json?Expires=1352966881&AWSAccessKeyId=123&Signature=FDs%2Buf0hXskY1%2BUj4A7S4wHFx20%3D\n\nNow you can use this URL with curl\n\n    curl --upload-file package.json \"http://mymachine.me:1234/my_bucket/toto.json?Expires=1352966881&AWSAccessKeyId=123&Signature=FDs%2Buf0hXskY1%2BUj4A7S4wHFx20%3D\"\n\nOr with request\n\n    var fs = require('fs');\n    var request = require('request');\n    fs.createReadStream('file.json').pipe(request.put(\"http://mymachine.me:1234/my_bucket/toto.json?Expires=1352966881&AWSAccessKeyId=123&Signature=FDs%2Buf0hXskY1%2BUj4A7S4wHFx20%3D\"))\n\nOr with any http client you like :)\n\nThank to @Filirom1 for local server changes\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/dyashkir/amazon-s3-url-signer.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "0.0.7"
}
