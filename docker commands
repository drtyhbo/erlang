setup:

docker pull mongo && docker stop mongo && docker rm mongo && docker run --name mongo -v /var/data/mongo:/data/db --net=host -d mongo:latest --auth --keyFile /data/db/mongodb-keyfile --replSet "rs0" --sslMode requireSSL --sslPEMKeyFile /data/db/mongodb.pem

docker stop mongo2 && docker rm mongo2 && docker run --name mongo2 -v /var/data/mongo2:/data/db --net=host -d mongo:latest --auth --port 27018 --keyFile /data/db/mongodb-keyfile --replSet "rs0" --sslMode requireSSL --sslPEMKeyFile /data/db/mongodb.pem

docker pull abinnewies/chat-webserver && docker stop web && docker rm web && docker run --name web --net=host -d abinnewies/chat-webserver

docker pull abinnewies/chat-server && docker stop chat && docker rm chat && docker run --net=host --name chat -v /var/data/mnesia:/var/data/mnesia -v /etc/certs:/etc/certs -d abinnewies/chat-server /usr/src/app/run.sh chat

docker pull nginx && docker stop nginx && docker rm nginx && docker run --name nginx --net=host -v /etc/certs:/etc/certs  -v /var/log/nginx:/var/log/nginx -v /etc/nginx/nginx.conf:/etc/nginx/nginx.conf -d nginx

redis cli:
docker stop redis-cli && docker rm redis-cli && docker run -it --name redis-cli --link redis1:redis1 --rm redis sh -c 'exec redis-cli -h "$REDIS1_PORT_6379_TCP_ADDR" -p "$REDIS1_PORT_6379_TCP_PORT"'

docker stop haproxy && docker rm haproxy && docker run -d --name haproxy --net=host -v /etc/default/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro -v /etc/certs:/etc/certs:ro haproxy:1.5


passwords:

admin - ,VUWj$)c+mwAz3wy
siteRootAdmin - u8]L3\dHV7vC-jTT

db.createUser( { user: "admin", pwd: ",VUWj$)c+mwAz3wy", roles: [ { role: "userAdminAnyDatabase", db: "admin" } ] });
db.createUser( { user: "siteRootAdmin", pwd: "u8]L3\dHV7vC-jTT", roles: [ { role: "root", db: "admin" } ] });
db.createUser( { user: "chat", pwd: "u*hw{//B87}YGU=", roles: [ { role: "readWrite", db: "chat" } ] });
